/* 
 *	Configuration file for bilateral exchange model (model parameters).
 */

// Model seeding: random or fixed seed?
rand:
{
	use_seed = false;
	seed = 42;
}

// Scaling parameters for the model.
// number.agents = Number of agents used in the model population.
// number.commodities = Number of commodities exchanged.
number:
{
	agents = 10000; 
	commodities = 10; 
};

// Number of pairwise interactions per model turn.
// A reasonable value would be number.agents divided by two.
interactions_per_period = 5000;

// Alpha values are randomly generated throuhgout the model; 
// these parameters govern the range of the uniform distribution used.
// Note: These are uniformly distributed Cobb-Douglas preferences
alpha:
{
	min = 0.01;
	max = 0.99;
}

// Determine the range of initial agent endowments.
wealth:
{
	min = 50;
	max = 150;
}

activation:
{
	method = 0;
	//-1 = serial, fixed fair (WARNING: Just for demonstration, do not use)
	// 0 = random unfair (random)
	// 1 = random fair (uniform)
	// 2 = Poisson-Middle (DO NOT USE - buggy)
	// 3 = Poisson-Poor
	// 4 = Poisson-Rich
	// 5 = Poisson-Extreme
	// 2-5 are NYI for fork-and-join
}

// Paralellization of model.
parallel:
{
	disabled = true;
	fork_and_join = true;
	number_of_threads = 1000; // 0 = system default
	shuffle_after_join = false; // fork-and-join only
}

// How many equilibrations should be performed in the model run?
num_equilibrations = 1;

// If num_equilibrations > 1, are conditions reset before the next equilibration?
same_conditions_each_equilibration = false;

// Trade epsilon parameter. Trade only occurs if expected gain from trade
// is greater than exp(eps).
trade:
{
	eps = 0.01;
}

termination: 
{
	// termination.criterion specifies the termination condition of the model.
	// -2 means termination based on time
	// -1 means use L2 norm on MRSs
	//  0 means use Lâˆž norm on MRSs
	//  1 means use relative increase in V
	//  2 means use absolute increase in V
	criterion = -2;  
	time = 100L; // must end in L (long)
	eps = 0.01;
	threshold = 90L; //must end in L (long)
	period = 10;
}

shock:
{
	enabled = false;
	period = 10;
	min = 1.0;
	max = 5.0;
}

debug:
{
	enabled = true; // enable LOG(DEBUG) in addition to LOG(INFO)
	print_endowments = false;
	print_intermediate_output = true;
	intermediate_output_print_period = 1;
	print_convergence_stats = true;
	print_final_commodity_list = true;
	dump_agent_information = true;
}

file:
{
	write_to_file = true; // write model outputs to file for analysis
	filename = "data.csv";  // NYI
	append = false; 
}
